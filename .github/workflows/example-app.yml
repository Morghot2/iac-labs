name: Python application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

defaults:
  run:
    working-directory: ./example-app

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    concurrency:
      group: dependencies-group

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: /home/runner/work/<path>/example-app/.venv
          key: ${{ runner.os }}-venv

      - name: Install Poetry
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH=$PATH:$HOME/.local/bin

      - name: Check Poetry installation
        run: poetry debug info

      - name: Install project dependencies
        run: poetry install

  static-code-analysis:
    runs-on: ubuntu-latest
    concurrency:
      group: static-analysis-group
    needs: install-dependencies

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run linter
        run: poetry run task lint

      - name: Run code formatter
        run: poetry run task formatter

      - name: Run security tests
        run: poetry run task security

  unit-tests:
    runs-on: ubuntu-latest
    concurrency:
      group: unit-tests-group
    needs: install-dependencies

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run unit tests
        run: poetry run task test
