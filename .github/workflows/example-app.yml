name: Python application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./example-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Remove python3-virtualenv for Ubuntu 20.04 VDI
        run: sudo apt-get -y purge python3-virtualenv

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH=$PATH:$HOME/.local/bin

      - name: Check Poetry installation
        run: poetry debug info

      - name: Cache Poetry packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install project dependencies
        run: poetry install --no-root

  linting_formatting_security:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        step: [lint, formatter, security]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Poetry packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Run ${{ matrix.step }} step
        run: poetry run task ${{ matrix.step }}

  unit_tests:
    runs-on: ubuntu-latest
    needs: [build, linting_formatting_security]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Poetry packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Run unit tests
        run: poetry run task test
